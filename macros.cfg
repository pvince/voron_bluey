#####################################################################
#   Macros
#####################################################################
[include klicky-probe.cfg]
[include heatsoak.cfg]
[include nozzle_scrub.cfg]

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    #--------------------------------------------------------------------
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro PRINT_WARMUP]
description: Pre-heats the printer, optionally waiting for printer to reach its heat soak target
gcode:
    ; Get temp parameters that were added in slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set BED_TYPE = params.BED_TYPE|default("High Temp Plate") %}

    ; Print out the current print's provided variables
    M117 BED_TEMP={BED_TEMP}
    M117 EXTRUDER_TEMP={EXTRUDER_TEMP}
    M117 BED_TYPE={BED_TYPE}

    ; Start heating up extruder & bed
    M104 S{EXTRUDER_TEMP * 0.75}      # Set extruder temperature to 75%
    M140 S{BED_TEMP}                  # Start heating the bed up

    ; Home XYZ
    G28

    ; If we have a high bed temperature, that indicates we are printing with ABS
    ; and we need to heat soak the chamber.
    {% if BED_TEMP > 100 %}
      M117 Waiting on bed@[{BED_TEMP}C] & chamber [40C]
      HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor chamber_temp' SOAK_TEMP=40
    {% else %}
      M117 Skipping heat soak
    {% endif %}

   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    ; Get temp parameters that were added in slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set BED_TYPE = params.BED_TYPE|default("High Temp Plate") %}

    ; Print out the current print's provided variables
    M117 BED_TEMP={BED_TEMP}
    M117 EXTRUDER_TEMP={EXTRUDER_TEMP}
    M117 BED_TYPE={BED_TYPE}

    ; Start by ensuring heated bed is going.
    M140 S{BED_TEMP}

    {% if BED_TEMP > 100 %}
      ; If printing with a high temperature material, only turn on the exhaust fan enough to
      ; ensure negative pressure
      SET_FAN_SPEED FAN=exhaust_fan SPEED=0.1
    {% elif BED_TEMP > 50 %}
      ; If printing with a low temperature material, turn on the exhaust fan to
      ; a higher level to keep the chamber temperature down.
      SET_FAN_SPEED FAN=exhaust_fan SPEED=0.5
    {% endif %}

    ; ------- Start bed and extruder heating -------
    M117 Starting pre-print sequence....
    SET_LED LED=toolhead_light RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0 BRIGHTNESS=1 ; Red

    M104 S{EXTRUDER_TEMP * 0.75}

    ; Home XYZ
    ; - Could be replaced with CHOME, but I generally feel it is better to be safe
    ;   here. There is a potential of a blob on the nozzle screwing w/ the Z-axis
    ;   homing. Maybe consider heating the nozzle, wiping it, then homing XYZ?
    CHOME
    
    ; ------- Wait for bed to reach temp -------
    M117 Waiting for bed to reach {BED_TEMP}C...
    SET_LED LED="toolhead_light" RED=1 GREEN=0.5333 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1 ; Orangish
    M190 S{BED_TEMP}

    ; Now that bed is up to temperature, trigger QGL.
    QUAD_GANTRY_LEVEL

    ; Home XY after QGL, wait for extruder to get  wiped before Z
    G28 X Y

    ; ------- Wait for extruder to reach actual print temp -------
    M117 Waiting for extruder to reach {EXTRUDER_TEMP}C...
    SET_LED LED=toolhead_light RED=0.0 GREEN=1.0 BLUE=0.0 WHITE=0 BRIGHTNESS=1 ; Green
    M109 S{EXTRUDER_TEMP}

    ; ------- Nozzle is at temperature now -------
    ; TODO: We should wipe nozzle here

    ; Finally, We need to home XYZ after QGL
    G28 Z

    ; Load the Skew profile from the CaliLantern
    SKEW_PROFILE LOAD=calilantern_skew_profile

    ; Run Auto Z-Calibration
    CALIBRATE_Z

    ; Adjust settings based on configured plate
    ; Possible bed types:
    ;   - Smooth Cool Plate
    ;   - Engineering Plate
    ;   - Smooth High Temp Plate
    ;   - Textured PEI Plate
    ;   - Textured Cool Plate
    {% if BED_TYPE=="Textured PEI Plate" %}
      M117 Bed type is [{BED_TYPE}] - Setting offset to -0.5
      SET_GCODE_OFFSET Z=-0.5
    {% elif BED_TYPE=="Textured Cool Plate" %}
      M117 Bed type is [{BED_TYPE}] - Setting offset to -0.5
      SET_GCODE_OFFSET Z=-0.5
    {% else %}
      M117 Bed type is [{BED_TYPE}]
    {% endif %}

    ; Create bed mesh, TODO: Adaptive meshing
    BED_MESH_CALIBRATE

    ; TODO: Print purge line

    ; ------- Finished with PRINT_START -------
    G90                       ; absolute positioning
    G1 X175 Y175 Z20 F7000    ; move nozzle to bed center

    ; Turn on the nozzle light to max brightness
    M117 Print starting
    SET_LED LED=toolhead_light RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=1.0 BRIGHTNESS=1
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    SET_SKEW CLEAR=1                         ; CaliLantern profile clear

    ; Ideally this should be in a delayed macro that self-retriggers periodically
    ; This would allow it to run for a period of time after the printer finished without
    ; interfering w/ the print itself.
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0


[gcode_macro _PRINT_CANCELLED]
gcode:
  # Ensure heat soak is properly stopped
  STOP_HEAT_SOAK

  # Ensure the 'skew' settings are cleared.
  SET_SKEW CLEAR=1

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set nozzle_position = params.NOZZLE_POSITION %}
    {% set switch_position = params.SWITCH_POSITION %}
    {% set bed_position = params.BED_POSITION %}
    {% set switch_offset = params.SWITCH_OFFSET %}
    CHOME
    M117 Z-Calibration..
    ATTACH_PROBE                # a macro for fetching the probe first
    BASE_CALIBRATE_Z NOZZLE_POSITION={nozzle_position} SWITCH_POSITION={switch_position} BED_POSITION={bed_position} SWITCH_OFFSET={switch_offset}
    DOCK_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
    M117

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro PARK_CENTER]
description: Moves the toolhead to the x_center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{y_center} F7800

[gcode_macro _LOGO_PENDING]
gcode:
  SET_LED LED=toolhead_light RED=0.15 GREEN=0.5 BLUE=0.75 WHITE=0 INDEX=1

[gcode_macro _LOGO_READY]
gcode:
  SET_LED LED=toolhead_light RED=0.99 GREEN=0.0 BLUE=0.0 WHITE=0 INDEX=1

[gcode_macro _LOGO_OFF]
gcode:
  SET_LED LED=toolhead_light RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=1
  

[gcode_macro _HEADLIGHT_ON]
gcode:
  SET_LED LED=toolhead_light RED=1 GREEN=1 BLUE=1 WHITE=1.0 INDEX=2 TRANSMIT=0
  SET_LED LED=toolhead_light RED=1 GREEN=1 BLUE=1 WHITE=1.0 INDEX=3


[gcode_macro _HEADLIGHT_OFF]
gcode:
  SET_LED LED=toolhead_light RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=2 TRANSMIT=0
  SET_LED LED=toolhead_light RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=3
  

[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  {% set MIN_TEMP = params.TEMP|default(230)|float * 0.98 %}
  {% set CURRENT_TARGET = printer.extruder.target|float %}
  CHOME
  G91                         ; relative positioning
  G1 Z20                      ; move nozzle upwards
  FRONT                       ; move the toolhead to the front
  {% if EXTRUDER_TEMP != 0 %}
    _LOGO_PENDING
    {% if CURRENT_TARGET < EXTRUDER_TEMP %}
      M104 S{EXTRUDER_TEMP} ; only heat up if the current extruder is not already hot
    {% endif %}
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp to reach
  {% endif %}
  _LOGO_READY
  M83                         ; set extruder to relative mode
  G1 E10 F300                 ; extrude a little to soften tip
  G1 E-8 F3600                ; quickly retract a small amount to elimate stringing
  G4 P200                     ; pause for a short amount of time
  G1 E-50 F400                ; retract slowly the rest of the way
  G1 E-20 F300
  M400                        ; wait for moves to finish
  M117 Unload Complete!
  _LOGO_OFF

[gcode_macro LOAD_FILAMENT]
description: Loads new filament into toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  {% set MIN_TEMP = params.TEMP|default(230)|float * 0.98 %}
  {% set CURRENT_TARGET = printer.extruder.target|float %}
  FRONT                       ; move the toolhead to the front
  {% if EXTRUDER_TEMP != 0 %}
    _LOGO_PENDING
    {% if CURRENT_TARGET < EXTRUDER_TEMP %}
      M104 S{EXTRUDER_TEMP} ; only heat up if the current extruder is not already hot
    {% endif %}
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp to reach
  {% endif %}
  _LOGO_READY
  _HEADLIGHT_ON
  M83                         ; set extruder to relative mode
  G1 E50 F300                 ; extrude slowlyL
  G1 E50 F300
  M400                        ; wait for moves to finish
  M117 Load Complete!
  _LOGO_OFF
  _HEADLIGHT_OFF
